<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Ai Buddy E-Commerce Prototype</title>
<style>
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    background: #f0f2f5;
}
header {
    background: #111;
    color: #fff;
    padding: 15px 20px;
    display: flex;
    align-items: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    position: sticky;
    top: 0;
    z-index: 1000;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}
.logo {
    font-weight: bold;
    font-size: 22px;
    margin-right: 20px;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s;
}
.logo:hover {
    transform: scale(1.1);
}
.logo span { margin-left: 5px; }
.search-bar {
    flex: 1;
    display: flex;
    align-items: center;
    border-radius: 25px;
    padding: 7px 15px;
    background: #fff;
    color: #000;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    transition: all 0.3s;
}
.search-bar:focus-within {
    box-shadow: 0 0 10px rgba(0,132,255,0.5);
    transform: scale(1.02);
}
.search-bar input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 16px;
    padding: 5px;
    background: transparent;
}
.search-bar .ai-icon {
    font-size: 24px;
    margin-right: 10px;
    cursor: pointer;
    transition: transform 0.2s;
}
.search-bar .ai-icon:hover { transform: rotate(20deg) scale(1.2); }
.products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
    max-height: 80vh;
    overflow-y: auto;
}
.product-card {
    background: #fff;
    border-radius: 15px;
    padding: 15px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: transform 0.3s, box-shadow 0.3s;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.product-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.2);
}
.product-img {
    font-size: 60px;
    text-align: center;
    margin-bottom: 10px;
    transition: transform 0.3s;
}
.product-card:hover .product-img { transform: scale(1.3); }
.product-name { font-weight: bold; margin-bottom: 5px; font-size: 16px; }
.product-price { color: #0a84ff; font-weight: bold; margin-bottom: 5px; }
.product-rating { color: gold; margin-bottom: 5px; }
.product-details { font-size: 13px; color: #555; margin-bottom: 3px; }
.color-options { display: flex; gap: 5px; margin-bottom: 5px; }
.color-dot { width: 18px; height: 18px; border-radius: 50%; border: 1px solid #ccc; cursor: pointer; transition: transform 0.2s; }
.color-dot:hover { transform: scale(1.3); }
.clicked { animation: clickEffect 0.3s ease-in-out; }
@keyframes clickEffect { 0% {transform: scale(1);} 50% {transform: scale(0.95);} 100% {transform: scale(1);} }
</style>
</head>
<body>

<header>
    <div class="logo">Ai Buddy <span>🤖</span></div>
    <div class="search-bar">
        <div class="ai-icon">🤖</div>
        <input type="text" placeholder="Search for products...">
    </div>
</header>

<div style="text-align:center; margin:10px; font-weight:bold;">50 Dummy Products Displayed Below</div>
<div class="products" id="products"></div>

<script>
// Generate 50 dummy products
const productsData = [];
const emojis = ['👕','👟','👜','👗','🧢','👖','👔','🩳','🩱','🧥'];
const colors = ['black','blue','darkgray','white'];
const sizes = ['S','M','L','XL'];
const materials = ['Cotton','Leather','Polyester','Silk','Denim'];
const types = ['Clothing','Shoes','Bag','Accessory'];
const qualities = ['High','Medium','Low'];

for(let i=1;i<=50;i++){
    productsData.push({
        name: `Product ${i}`,
        price: Math.floor(Math.random()*2000)+100,
        rating: ['⭐⭐⭐☆☆','⭐⭐⭐⭐☆','⭐⭐⭐⭐⭐'][Math.floor(Math.random()*3)],
        img: emojis[Math.floor(Math.random()*emojis.length)],
        colors: colors,
        size: sizes[Math.floor(Math.random()*sizes.length)],
        type: types[Math.floor(Math.random()*types.length)],
        quality: qualities[Math.floor(Math.random()*qualities.length)],
        quantity: Math.floor(Math.random()*50)+1,
        material: materials[Math.floor(Math.random()*materials.length)],
        brand: `Brand ${Math.floor(Math.random()*20)+1}`,
        discount: `${Math.floor(Math.random()*50)}% Off`,
        delivery: ['2-3 Days','5-7 Days','1-2 Weeks'][Math.floor(Math.random()*3)],
        sku: `SKU${1000+i}`
    });
}

const productsContainer = document.getElementById('products');
productsData.forEach(p=>{
    const card = document.createElement('div');
    card.classList.add('product-card');
    card.innerHTML = `
        <div class="product-img">${p.img}</div>
        <div class="product-name">${p.name}</div>
        <div class="product-price">₹${p.price} <span style='color:red;font-size:12px;'>(${p.discount})</span></div>
        <div class="product-rating">${p.rating}</div>
        <div class="product-details">Brand: ${p.brand}</div>
        <div class="product-details">Type: ${p.type}</div>
        <div class="product-details">Size: ${p.size}</div>
        <div class="product-details">Quality: ${p.quality}</div>
        <div class="product-details">Quantity: ${p.quantity}</div>
        <div class="product-details">Material: ${p.material}</div>
        <div class="product-details">Delivery: ${p.delivery}</div>
        <div class="product-details">SKU: ${p.sku}</div>
        <div class="color-options">${p.colors.map(c=>`<div class='color-dot' style='background:${c}'></div>`).join('')}</div>
    `;
    card.addEventListener('click', ()=>{
        card.classList.add('clicked');
        setTimeout(()=>card.classList.remove('clicked'),300);
        alert(`Product Opened: ${p.name}\nPrice: ₹${p.price}\nBrand: ${p.brand}\nSize: ${p.size}\nQuantity: ${p.quantity}\nMaterial: ${p.material}\nDelivery: ${p.delivery}\nSKU: ${p.sku}`);
    });
    productsContainer.appendChild(card);
});

// Search bar click animation
const searchBar = document.querySelector('.search-bar');
searchBar.addEventListener('click', ()=>{
    searchBar.classList.add('clicked');
    setTimeout(()=>searchBar.classList.remove('clicked'),300);
});
</script>

</body>
</html>
